/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if (list2 == null) return list1;
        if (list1 == null) return list2;
        
        if (list1.val < list2.val) {
            mergeList(list1, list2);
            return list1;
        } else {
            mergeList(list2, list1);
            return list2;
        }        
    }
    
    public void mergeList(ListNode des, ListNode src) {
        ListNode prevDes = new ListNode();
        ListNode temp = new ListNode();
        
        while (des != null && src != null) {
            if (des.val > src.val) {
                temp = src.next;
                
                prevDes.next = src;
                src.next = des;
                
                prevDes = src;
                src = temp;
            } else {
                prevDes = des;
                des = des.next;
            }
        }
        
        if (src != null) prevDes.next = src;
    }
} 